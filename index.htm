<html>
<head>
<style>
canvas {
    border:1px solid #d3d3d3;
    background-color: #f1f1f1;
}
</style>
<title></title>
</head>
<body>
 
<script>
//
var GRASS = 0;
var active_map_piece = new Array();
var tile_array = new Array();
var axe_img = new Image()
axe_img.src = "./images/parts/weapons/axe.png"
var orc_body_part = new Array();
orc_body_part[0] = new Image();
orc_body_part[0].src = "./images/parts/orc_body.png"
orc_body_part[1] = new Image();
orc_body_part[1].src = "./images/parts/orc_legs.png"
tile_array[0] = new Image();
tile_array[0].src = "./images/tiles/grass_tile.png";
var curr_map_array = new Array();
var OVER_WORLD = 0;

function person_build(top_part,bottom_part,x,y,weapon)
{
	this.bottom_offset = bottom_part.height;
	this.bottom = bottom_part;
	this.x = x;
	this.y = y;
	this.weapon = weapon;
	this.top = top_part;
	this.move_piece = function(x_mov,y_mov)
	{
		this.bottom.x = x_mov;
		this.top.x = x_mov;
		this.bottom.y = y_mov + this.bottom_offset;
		this.top.y = y_mov;
		this.weapon.x = x_mov + 19;
		this.weapon.y = y_mov;
	}
	this.update = function()
	{
		this.weapon.update();
		this.top.update();
		this.bottom.update();
	}
}

var player;

function weapon(pixel_offset,core)
{
	this.core = core;
	this.off_set = pixel_offset;
}

function create_player()
{
	var axe = new component(32,32,0,0,0,axe_img,0)
	var player_top = new component(32,32,0,0,0,orc_body_part[0],0);
	var player_bottom = new component(32,32,0,0,0,orc_body_part[1],0);
	player = new person_build(player_top,player_bottom,1,1,axe);
}

function tile(x,y,type)
{
		this.x = x;
		this.y = y;
		this.type = tile_array[type];
}

function map(width,height)
{
	this.width = width;
	this.height = height;
	this.tiles = new Array();
	var y = 1;
	var x = 1;
	for(i = 0; y <= height;i++)
	{
		var has_vil = false;
		if((Math.floor(Math.random() * 1) + 6) == 6)
		{
				has_vil = true;
		}
		this.tiles[i] = new tile(x,y,GRASS);
		if(x == width)
		{
			y++;
			x = 0;
		}
		x++;
	}
}

function draw_map(mtd)
{
	active_map_piece = [];
	for(i = 0; i < mtd.tiles.length; i++)
	{
		var x_val = mtd.tiles[i].x * 64 - 64;
		var y_val = mtd.tiles[i].y * 64 - 64;
		active_map_piece[i] = new component(64,64,0,x_val,y_val,tile_array[GRASS],0)
	}
}

var mode = 0;
var SCREEN_WIDTH = 1200;
var SCREEN_HEIGHT = 700;
var TICK_SPEED = 1;
var ticks = 0;
var active_components = new Array()

function component(width, height, color, x, y,sprite,speed) {
    this.width = width;
    this.height = height;
	this.speed = speed;
    this.x = x;
    this.y = y; 
	this.imagge = sprite;
    ctx = myGameArea.context;
	if(color != 0)
	{
    ctx.fillStyle = color;
    ctx.fillRect(this.x, this.y, this.width, this.height);
	}
    this.update = function(){
        ctx = myGameArea.context;
       // ctx.fillStyle = color;
        //ctx.fillRect(this.x, this.y, this.width, this.height);
		ctx.drawImage(this.imagge,this.x,this.y,this.width,this.height);

    }
		this.move_piece = function(x_change,y_change)
	{
		this.x += x_change;
		this.y += y_change;
	}
		
}
var myGamePiece = new Array();
var mode = OVER_WORLD;
var last_press = 0;
function updateGameArea() 
{
	myGameArea.clear();
	for(i = 0; i < active_map_piece.length; i++)
	{
		active_map_piece[i].update();
	}
	ticks += 5;
	if(last_press + 100 < ticks)
	{
		if (myGameArea.keys && myGameArea.keys[37] || myGameArea.keys && myGameArea.keys[65])  {player.x--} //LEFT/A
		if (myGameArea.keys && myGameArea.keys[39] || myGameArea.keys && myGameArea.keys[68]){player.x++} //RIGHT/D
		if (myGameArea.keys && myGameArea.keys[38] || myGameArea.keys && myGameArea.keys[87]) {player.y--} //UP/W
		if (myGameArea.keys && myGameArea.keys[40] || myGameArea.keys && myGameArea.keys[83]) {player.y++} //DOWN/S
		last_press = ticks;
	}
	player.move_piece(player.x * 64 -50,player.y * 64 - 60);
	player.update()
}

var myGameArea = {
    canvas : document.createElement("canvas"),
    start : function() {
        this.canvas.width = SCREEN_WIDTH;
        this.canvas.height = SCREEN_HEIGHT;
        this.context = this.canvas.getContext("2d");
		this.context.imageSmoothingEnabled = false;
        document.body.insertBefore(this.canvas, document.body.childNodes[0]);
        this.interval = setInterval(updateGameArea, TICK_SPEED);
		create_player();
        window.addEventListener('keydown', function (e) {
            myGameArea.keys = (myGameArea.keys || []);
            myGameArea.keys[e.keyCode] = true;
        })
        window.addEventListener('keyup', function (e) {
            myGameArea.keys[e.keyCode] = false; 
        })
    },
    clear : function() {
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
    }
}



function startGame() {
    myGameArea.start();
	//myGamePiece[1] = new component(30,30,"blue",100,200,false);
	//myGamePiece[2] = new component(30, 30, "red", 10, 300,false);
	//myGamePiece[3] = new component(30, 30, "red", 10, 300,false);
}

startGame();
</script>

</body>
</html>
